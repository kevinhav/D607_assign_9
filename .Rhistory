renv::activate()
install.packages("'tidyverse", "dotenv", "httr2")
install.packages("tidyverse", "dotenv", "httr2")
renv::snapshot()
library(tidyverse)
library(dotenv)
library(tidyverse)
library(dotenv)
library(httr2)
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com//svc/books/v3/list/names.json"
response <- request(endpoint) |>
req_url_query(api_key = key) |>
req_perform()
response <- request(endpoint) |>
req_url_query(api_key = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("SECRETKEY")
endpoint <- "https://api.nytimes.com//svc/books/v3/list/names.json"
response <- request(endpoint) |>
req_url_query(api_key = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com//svc/books/v3/list/names.json"
response <- request(endpoint) |>
req_url_query(api_key = key) |>
req_perform()
?req_url_query
response <- request(endpoint) |>
req_url_query("api_key" = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com//svc/books/v3/list/names.json"
response <- request(endpoint) |>
req_url_query("api_key" = key) |>
req_perform()
library(tidyverse)
library(dotenv)
library(httr2)
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3"
response <- request(endpoint) |>
req_url_path_append("/reviews.json") |>
req_url_query(`api_key` = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("SECRETKEY")
endpoint <- "https://api.nytimes.com/svc/books/v3"
response <- request(endpoint) |>
req_url_path_append("/reviews.json") |>
req_url_query(`api_key` = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3"
response <- request(endpoint) |>
req_url_path_append("/reviews.json") |>
req_url_query(`api_key` = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "http://api.nytimes.com/svc/books/v3"
response <- request(endpoint) |>
req_url_path_append("/reviews.json") |>
req_url_query(`api_key` = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json"
response <- request(endpoint) |>
req_url_query(`api_key` = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json"
resp <- request("https://api.nytimes.com/svc/books/v3") |>
req_url_path_append("/reviews.json") |>
req_url_query(`api-key` = key, isbn = 9780307476463) |>
req_perform()
resp
resp |> spread_all
resp |> spread_all()
resp |> spread_
resp |> spread()
resp <- request("https://api.nytimes.com/svc/books/v3") |>
req_url_path_append("/reviews.json") |>
req_url_query(`api-key` = key, isbn = 9780307476463) |>
req_perform()
data <- resp_body_json(resp)
data |> spread()
install.packages(jsonlite)
install.packages("jsonlite")
df <- fromJSON(data)
library(tidyverse)
library(dotenv)
library(httr2)
library(jsonlite)
df <- fromJSON(data)
?resp_body_json
View(resp)
df <- data$results
df <- as_tibble(data$results)
View(df)
df <- as_tibble(data$results)
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json"
resp <- request("https://api.nytimes.com/svc/books/v3") |>
req_url_path_append("/reviews.json") |>
req_url_query(`api-key` = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json"
resp <- request("https://api.nytimes.com/svc/books/v3") |>
req_url_query(`api-key` = key) |>
req_perform()
resp <- request("https://api.nytimes.com/svc/books/v3/lists.json") |>
req_url_query(`api-key` = key) |>
req_perform()
View(resp)
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json"
resp <- request(endpoint) |>
req_url_query(`api-key` = key) |>
req_perform()
data <- resp_body_json(resp)
df <- as_tibble(data$results)
resp <- request(endpoint) |>
req_url_query(`api-key` = key) |>
req_perform()
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json"
resp <- request(endpoint) |>
req_url_query(`api-key` = key) |>
req_perform()
data <- resp_body_json(resp)
View(data)
View(resp)
View(resp)
df <- as_tibble(data$results)
View(data)
df <- as_tibble(data$results)
View(resp)
df <- as_tibble(data$results)
books <- data$results$books
View(books)
books <- data$results$books
books |>
unnest_wider(title)
books <- data$results$books
books <- flatten(books)
books <- data$results$books
books <- as.tibble(books)
books <- data$results$books
books <- as_tibble(books)
books <- data$results$books
books <- flatten_dfr(books)
View(books)
# Example: Unlist nested elements before conversion
books_tibble <- map_dfr(named_lists, ~ as_tibble_row(unlist(.x)))
# Step 1: Assign temporary names to each element in the inner lists
named_lists <- map(books, ~ set_names(.x, paste0("V", seq_along(.x))))
# Step 2: Convert the list of lists into a tibble
books_tibble <- map_dfr(named_lists, ~ as_tibble_row(.x))
# Step 1: Assign temporary names to each inner element
named_lists <- map(books, ~ set_names(.x, paste0("V", seq_along(.x))))
# Step 2: Wrap non-scalar elements in list()
books_tibble <- map_dfr(named_lists, ~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# View the resulting tibble
print(books_tibble)
# Step 1: Assign temporary names to each inner element
named_lists <- c('rank',
'rank_last_week',
'weeks_on_list',
'asterisk',
'dagger',
'primary_isbn10',
'primary_isbn13',
'publisher',
'description',
'price',
'title',
'author',
'contributor',
'contributor_note',
'book_image',
'book_image_width',
'book_image_height',
'amazon_product_url',
'age_group',
'book_review_link',
'first_chapter_link',
'sunday_review_link',
'article_chapter_link',
'isbns',
'buy_links',
'book_uri'
)
# Step 2: Wrap non-scalar elements in list()
books_tibble <- map_dfr(named_lists, ~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# Step 1: Assign temporary names to each inner element
col_names <- c('rank',
'rank_last_week',
'weeks_on_list',
'asterisk',
'dagger',
'primary_isbn10',
'primary_isbn13',
'publisher',
'description',
'price',
'title',
'author',
'contributor',
'contributor_note',
'book_image',
'book_image_width',
'book_image_height',
'amazon_product_url',
'age_group',
'book_review_link',
'first_chapter_link',
'sunday_review_link',
'article_chapter_link',
'isbns',
'buy_links',
'book_uri'
)
named_lists <- map(books, ~set_names(.x, col_names))
# Step 2: Wrap non-scalar elements in list()
books_tibble <- map_dfr(named_lists, ~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# View the resulting tibble
print(books_tibble)
# Assign column names
col_names <- c('rank',
'rank_last_week',
'weeks_on_list',
'asterisk',
'dagger',
'primary_isbn10',
'primary_isbn13',
'publisher',
'description',
'price',
'title',
'author',
'contributor',
'contributor_note',
'book_image',
'book_image_width',
'book_image_height',
'amazon_product_url',
'age_group',
'book_review_link',
'first_chapter_link',
'sunday_review_link',
'article_chapter_link',
'isbns',
'buy_links',
'book_uri'
)
# Map each column to the column names for further manipulation
named_lists <- map(books, ~set_names(.x, col_names))
# Put non-lists into lists and map them to columnsin a tibble
books_tibble <- map_dfr(named_lists, ~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# View the resulting tibble
kable(head(books_tibble))
library(tidyverse)
library(dotenv)
library(httr2)
library(jsonlite)
library(knitr)
# Assign column names
col_names <- c('rank',
'rank_last_week',
'weeks_on_list',
'asterisk',
'dagger',
'primary_isbn10',
'primary_isbn13',
'publisher',
'description',
'price',
'title',
'author',
'contributor',
'contributor_note',
'book_image',
'book_image_width',
'book_image_height',
'amazon_product_url',
'age_group',
'book_review_link',
'first_chapter_link',
'sunday_review_link',
'article_chapter_link',
'isbns',
'buy_links',
'book_uri'
)
# Map each column to the column names for further manipulation
named_lists <- map(books, ~set_names(.x, col_names))
# Put non-lists into lists and map them to columnsin a tibble
books_tibble <- map_dfr(named_lists, ~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# View the resulting tibble
kable(head(books_tibble))
# Assign column names
col_names <- c('rank',
'rank_last_week',
'weeks_on_list',
'asterisk',
'dagger',
'primary_isbn10',
'primary_isbn13',
'publisher',
'description',
'price',
'title',
'author',
'contributor',
'contributor_note',
'book_image',
'book_image_width',
'book_image_height',
'amazon_product_url',
'age_group',
'book_review_link',
'first_chapter_link',
'sunday_review_link',
'article_chapter_link',
'isbns',
'buy_links',
'book_uri'
)
# Map each column to the column names for further manipulation
named_lists <- map(books, ~set_names(.x, col_names))
# Put non-lists into lists and map them to columns in a tibble
books_tibble <- map_dfr(named_lists,
~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# View the resulting tibble
kable(head(books_tibble))
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
library(tidyverse)
library(dotenv)
library(httr2)
library(jsonlite)
library(knitr)
library(tidyverse)
library(dotenv)
library(httr2)
library(jsonlite)
library(knitr)
dotenv::load_dot_env()
key <- Sys.getenv("KEY")
endpoint <- "https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json"
resp <- request(endpoint) |>
req_url_query(`api-key` = key) |>
req_perform()
data <- resp_body_json(resp)
books <- data$results$books
# Assign column names
col_names <- c('rank',
'rank_last_week',
'weeks_on_list',
'asterisk',
'dagger',
'primary_isbn10',
'primary_isbn13',
'publisher',
'description',
'price',
'title',
'author',
'contributor',
'contributor_note',
'book_image',
'book_image_width',
'book_image_height',
'amazon_product_url',
'age_group',
'book_review_link',
'first_chapter_link',
'sunday_review_link',
'article_chapter_link',
'isbns',
'buy_links',
'book_uri'
)
# Map each column to the column names for further manipulation
named_lists <- map(books, ~set_names(.x, col_names))
# Put non-lists into lists and map them to columns in a tibble
books_tibble <- map_dfr(named_lists,
~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# View the resulting tibble
kable(head(books_tibble))
# Assign column names
col_names <- c('rank',
'rank_last_week',
'weeks_on_list',
'asterisk',
'dagger',
'primary_isbn10',
'primary_isbn13',
'publisher',
'description',
'price',
'title',
'author',
'contributor',
'contributor_note',
'book_image',
'book_image_width',
'book_image_height',
'amazon_product_url',
'age_group',
'book_review_link',
'first_chapter_link',
'sunday_review_link',
'article_chapter_link',
'isbns',
'buy_links',
'book_uri'
)
# Map each column to the column names for further manipulation
named_lists <- map(books, ~set_names(.x, col_names))
# Put non-lists into lists and map them to columns in a tibble
books_tibble <- map_dfr(named_lists,
~ as_tibble_row(map_if(.x, ~ length(.x) > 1, list)))
# View the resulting tibble
kable(head(books_tibble))
